# Configuration options for the resource pack
# READ SETUP GUIDE: https://xenondevs.xyz/docs/nova/admin/setup/#step-2-resourcepack-hosting
resource_pack:
  # The auto uploader automatically uploads the resource pack after generation.
  # READ SETUP GUIDE: https://xenondevs.xyz/docs/nova/admin/setup/#automatic-resource-pack-hosting
  auto_upload:
    enabled: false
    
  # The auto copier automatically copies the resource pack after generation.
  # For use with BlueMaps and other plugins requiring resource pack.
  auto_copy:
    enabled: false
    # A list of files where to the resource pack should be copied. Destination files will be overwritten!
    # Destination directories are created automatically. Destination files without zip extension are skipped.
    destinations: [ ]

  # Settings affecting the resource pack prompt
  prompt:
    # The resource pack prompt message
    message: <gradient:aqua:blue>Nova Resource Pack</gradient>
    # Whether players are forced to accept the resource pack
    force: true
    # Activates the 'nova.misc.resourcePack.bypass.force' permission, with which players will still get the resource pack prompt, but won't be forced to accept it.
    # This permission is disabled by default, so players with *-permissions will not accidentally bypass it.
    enableForceBypassPermission: false
    # Activates the 'nova.misc.resourcePack.bypass.prompt' permission, with which players will not get the resource pack prompt.
    # This permission is disabled by default, so players with *-permissions will not accidentally bypass the prompt.
    enablePromptBypassPermission: false
  # Settings affecting how the resource pack is generated.
  generation:
    # The resource pack description.
    description: Nova (%s asset pack(s), %s base pack(s))
    # Resource packs that should be merged with Nova's resource pack.
    # More information about base packs can be found in our documentation: https://xenondevs.xyz/docs/nova/admin/setup/#optional-resourcepack-merging
    # Files in plugins/Nova/resource_pack/base_packs/ do NOT need to be listed here, they are included automatically.
    base_packs: [ ]
    # The zip compression level, ranging from 0 (no compression) to 9 (best compression) or -1 for default.
    compression_level: -1
    # If the generation process should take place entirely in memory. This increases memory usage during pack generation but improves generation speed.
    in_memory: true
    # Settings regarding the generation of font files.
    font:
      # A list of fonts that should not have moved versions generated.
      # Generally, all custom fonts from base packs that don't require moved versions (i.e. are not shown in the boss bar) should be added here.
      moved_font_blacklist: [ ]
    # A list of file extensions that shouldn't be excluded from the resource pack, even though they're not vanilla resource pack files.
    whitelisted_file_types: [ ]
    # Excludes files from the resource pack. Excluding files will decrease the size of your resource pack but might also break some features.
    # More information about resource filters can be found in our documentation: https://xenondevs.xyz/docs/nova/admin/configuration/#resource-filters
    resource_filters: [ ]
    # Whether Minecraft assets should be downloaded from GitHub or Mojang's API.
    # GitHub is faster since it's a single zip file. If you're unable to access GitHub, change this to "mojang".
    minecraft_assets_source: github
    # Whether Nova should assume the uniform font for char size calculation.
    # If players on your server are expected to "Force Unicode Font" in Minecraft's font settings enabled, you should set this to true.
    force_uniform_font: false
    # Whether Nova should assume japanese glyph variants for char size calculation.
    # If the players on your server are expected to have "Japanese Glyph Variants" in Minecraft's font settings enabled, you should set this to true.
    japanese_glyph_variants: false
    # A list of backing state categories that should not be used for custom blocks.
    # Custom blocks may fall back to an entity-backed model, which can worsen performance.
    # Possible values: "note_block", "mushroom_block", "leaves", "tripwire_unattached", "tripwire_attached"
    disabled_backing_state_categories: [ ]

# The render distance for fake (packet-based) entities from Nova, in chunks.
# Note that the render distance is also limited by the entity render distance of the client.
entity_render_distance:
  min: 1
  max: 6
  default: 4

overlay:
  actionbar:
    # Enable / disable all action bar overlays.
    enabled: true
  bossbar:
    # Enable / disable all boss bar overlays.
    # You will need to regenerate the resource pack after changing this value.
    enabled: true
    # How many invisible boss bar should be sent to the player.
    amount: 20
    # If the boss bars should be sent after the player confirms that the server resource pack has been loaded.
    # !!! THIS WILL CAUSE ISSUES IF YOU'RE NOT USING NOVA'S FORCED RESOURCE PACK !!!
    send_bars_after_resource_pack_loaded: false
    # A list of colors for which the boss bar should not be rendered.
    # Possible colors: pink, blue, red, green, yellow, purple, white
    invisible_colors: [ ]
    # Settings affecting vanilla boss bars.
    vanilla_bars:
      # Settings affecting the positioning of vanilla boss bars.
      positioning:
        # The minimum distance from the boss bar above, in pixels (affected by gui scale).
        margin_top: 14
        # The minimum distance from the boss bar below, in pixels (affected by gui scale).
        margin_bottom: 0

waila:
  # Enable / disable the WAILA overlay.
  enabled: true
  # Settings affecting the position of the WAILA overlay.
  positioning:
    # The minimum distance from the overlay above, in pixels (affected by gui scale).
    margin_top: 5
    # The minimum distance from the overlay below, in pixels (affected by gui scale).
    margin_bottom: 5
    # The matchers for bars that should be below WAILA.
    # See: https://xenondevs.xyz/docs/nova/admin/configuration/#waila-positioning
    above:
      - type: index
        index: 0
    # The matchers for bars that should be above WAILA.
    # See: https://xenondevs.xyz/docs/nova/admin/configuration/#waila-positioning
    below: [ ]
  # The interval for checking if a player is looking at a new block.
  pos_update_interval: 1
  # The interval for updating the overlay, regardless if the player is still looking at the same block.
  # Updating the overlay under these circumstances is still required for displaying the tool matching, energy, etc. properly.
  data_update_interval: 5
  # A list of namespaced ids representing the blocks that should not be shown in WAILA.
  # Allows wildcard patterns, e.g. "minecraft:*_ore" or "minecraft:*"
  blacklisted_blocks: [ ]

world:
  # Settings affecting block breaking.
  block_breaking:
    # The block break cooldown, in ticks.
    break_cooldown: 5
  format:
    # If backup files should be created while saving Nova regions
    region_backups: true
    # The compression algorithm used (none, deflate, lz4, zstd)
    compression: zstd

# Settings affecting tile-entity networks.
network:
  # Whether independent networks are allowed to tick in parallel.
  parallel_ticking: true
  # Settings affecting nova:energy networks.
  energy:
    # The delay in-between energy network ticks, in game ticks.
    tick_delay: 1
    # The maximum amount of end points in energy networks. Networks with more end points will not be ticked. (-1 for unlimited)
    max_complexity: -1
    # The default transfer rate for energy networks, in energy units per game tick. (-1 for unlimited)
    # This is scaled with the network tick delay, so that the actual amount of energy transferred per second stays the same.
    default_transfer_rate: -1
  # Settings affecting nova:item networks.
  item:
    # The delay in-between item network ticks, in game ticks.
    tick_delay: 20
    # The maximum amount of end points in item networks. Networks with more end points will not be ticked. (-1 for unlimited)
    max_complexity: -1
    # The default transfer rate for item networks, in items per game tick. (-1 for unlimited)
    # This is scaled with the network tick delay, so that the actual amount of items transferred per second stays the same.
    default_transfer_rate: -1
    # The amount of different channels available.
    channel_amount: 4
  # Settings affecting nova:fluid networks.
  fluid:
    # The delay in-between fluid network ticks, in game ticks.
    tick_delay: 1
    # The maximum amount of end points in fluid networks. Networks with more end points will not be ticked. (-1 for unlimited)
    max_complexity: -1
    # The default transfer rate for fluid networks, in fluid units per game tick. (-1 for unlimited)
    # This is scaled with the network tick delay, so that the actual amount of fluid transferred per second stays the same.
    default_transfer_rate: -1
    # The amount of different channels available.
    channel_amount: 4

# Performance options
performance:
  # If all char sizes should be loaded on startup. This will increase startup time but prevent lags when initially accessing char sizes.
  load_char_sizes_on_startup: false
  # If excess items should be dropped on the ground.
  drop_excess_on_ground: true
  # If block break particles should be displayed.
  block_break_effects: true
  # Whether legacy conversion for Nova item stacks is enabled.
  item_stack_legacy_conversion: true

# If metric prefixes should be used to display energy and fluids (e.g. kJ, MJ, GJ or B, kB, MB)
use_metric_prefixes: false

update_reminder:
  # If update reminders should be shown.
  enabled: true
  # The amount of ticks passed between update checks.
  interval: 12000

debug:
  # The chunk reload watcher will print stack traces if repeated chunk loads and unloads are detected.
  watch_chunk_reloads: false
  # If other plugins should be allowed to overwrite the results of Nova recipes.
  allow_craft_result_overwrite: false
  # A list of pack tasks that should be skipped during resource pack generation
  skip_pack_tasks: []
  # Debug logging options
  logging:
    # Logs initializer runnable calls
    initializer: false
    # Logs biome injects
    biome_injections: false
    # Logs registry freezing
    registry_freeze: false